export { I as AnyDataTag, a$ as CancelOptions, C as CancelledError, J as DataTag, z as DefaultError, a_ as DefaultOptions, ad as DefaultedInfiniteQueryObserverOptions, ab as DefaultedQueryObserverOptions, aI as DefinedInfiniteQueryObserverResult, az as DefinedQueryObserverResult, D as DehydrateOptions, x as DehydratedState, P as Enabled, ag as EnsureInfiniteQueryDataOptions, af as EnsureQueryDataOptions, ah as FetchInfiniteQueryOptions, ao as FetchNextPageOptions, ap as FetchPreviousPageOptions, ae as FetchQueryOptions, ar as FetchStatus, $ as GetNextPageParamFunction, _ as GetPreviousPageParamFunction, H as HydrateOptions, a0 as InfiniteData, aB as InfiniteQueryObserverBaseResult, aE as InfiniteQueryObserverLoadingErrorResult, aD as InfiniteQueryObserverLoadingResult, ac as InfiniteQueryObserverOptions, aC as InfiniteQueryObserverPendingResult, aH as InfiniteQueryObserverPlaceholderResult, aF as InfiniteQueryObserverRefetchErrorResult, aJ as InfiniteQueryObserverResult, aG as InfiniteQueryObserverSuccessResult, a6 as InfiniteQueryPageParamsOptions, W as InitialDataFunction, a5 as InitialPageParam, am as InvalidateOptions, ak as InvalidateQueryFilters, aS as MutateFunction, aR as MutateOptions, w as Mutation, M as MutationCache, d as MutationCacheNotifyEvent, g as MutationFilters, aO as MutationFunction, aK as MutationKey, aN as MutationMeta, e as MutationObserver, aT as MutationObserverBaseResult, aW as MutationObserverErrorResult, aU as MutationObserverIdleResult, aV as MutationObserverLoadingResult, aQ as MutationObserverOptions, aY as MutationObserverResult, aX as MutationObserverSuccessResult, aP as MutationOptions, aM as MutationScope, v as MutationState, aL as MutationStatus, a2 as NetworkMode, N as NoInfer, b2 as NotifyEvent, b1 as NotifyEventType, a3 as NotifyOnChangeProps, O as OmitKeyof, aa as Optional, y as Override, X as PlaceholderDataFunction, Y as QueriesPlaceholderDataFunction, u as Query, Q as QueryCache, a as QueryCacheNotifyEvent, b as QueryClient, aZ as QueryClientConfig, j as QueryFilters, K as QueryFunction, V as QueryFunctionContext, A as QueryKey, Z as QueryKeyHashFunction, a1 as QueryMeta, c as QueryObserver, as as QueryObserverBaseResult, av as QueryObserverLoadingErrorResult, au as QueryObserverLoadingResult, a8 as QueryObserverOptions, at as QueryObserverPendingResult, ay as QueryObserverPlaceholderResult, aw as QueryObserverRefetchErrorResult, aA as QueryObserverResult, ax as QueryObserverSuccessResult, a4 as QueryOptions, T as QueryPersister, t as QueryState, aq as QueryStatus, aj as RefetchOptions, al as RefetchQueryFilters, R as Register, an as ResetOptions, ai as ResultOptions, b0 as SetDataOptions, S as SkipToken, L as StaleTime, a7 as ThrowOnError, G as UnsetMarker, U as Updater, a9 as WithRequired, E as dataTagErrorSymbol, B as dataTagSymbol, q as defaultShouldDehydrateMutation, p as defaultShouldDehydrateQuery, n as dehydrate, h as hashKey, o as hydrate, l as isCancelledError, i as isServer, k as keepPreviousData, f as matchMutation, m as matchQuery, r as replaceEqualDeep, s as skipToken, F as unsetMarker } from './hydration-k2LfsAVL.js';
export { QueriesObserver, QueriesObserverOptions } from './queriesObserver.js';
export { InfiniteQueryObserver } from './infiniteQueryObserver.js';
export { notifyManager } from './notifyManager.js';
export { focusManager } from './focusManager.js';
export { onlineManager } from './onlineManager.js';
import './removable.js';
import './subscribable.js';
