import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import FormControl from '@mui/material/FormControl';
import FormLabel from '@mui/material/FormLabel';
import MenuItem from '@mui/material/MenuItem';
import Select from '@mui/material/Select';
import { useTheme } from '@mui/material/styles';
import React from 'react';
import { useTranslation } from 'react-i18next';
import { supportedLanguages } from '../config';
/**
 * A UI for selecting the locale with i18next
 */
export default function LocaleSelect(props) {
    const { formControlProps, showFullNames } = props;
    const { t, i18n } = useTranslation();
    const theme = useTheme();
    const fullNames = React.useMemo(() => {
        if (!showFullNames) {
            return {};
        }
        return getFullNames();
    }, [showFullNames]);
    const changeLng = (event) => {
        const lng = event.target.value;
        i18n.changeLanguage(lng);
        theme.direction = i18n.dir();
    };
    function getFullNames() {
        if (!i18n?.options?.supportedLngs) {
            return {};
        }
        const fullNames = {};
        i18n?.options?.supportedLngs.forEach((lng) => {
            if (!lng) {
                return;
            }
            fullNames[lng] = supportedLanguages[lng] || lng;
        });
        return fullNames;
    }
    // Select has a problem with aria-controls not being stable under test.
    const extraInputProps = import.meta.env.UNDER_TEST ? { 'aria-controls': 'under-test' } : {};
    return (_jsxs(FormControl, { sx: { margin: theme.spacing(2) }, ...formControlProps, children: [props.showTitle && _jsx(FormLabel, { component: "legend", children: t('Select locale') }), _jsx(Select, { value: i18n.language ? i18n.language : 'en', onChange: changeLng, SelectDisplayProps: extraInputProps, inputProps: { 'aria-label': t('Select locale'), ...extraInputProps }, children: (i18n?.options?.supportedLngs || [])
                    .filter(lng => lng !== 'cimode')
                    .map(lng => (_jsx(MenuItem, { value: lng, children: showFullNames ? fullNames[lng] : lng }, lng))) })] }));
}
