import { createSlice } from '@reduxjs/toolkit';
const initialState = {
    /** Once the plugins have been fetched and executed. */
    loaded: false,
    /** If plugin settings are saved use those. */
    pluginSettings: JSON.parse(localStorage.getItem('headlampPluginSettings') || '[]'),
};
export const pluginsSlice = createSlice({
    name: 'plugins',
    initialState,
    reducers: {
        pluginsLoaded(state) {
            state.loaded = true;
        },
        /**
         * Save the plugin settings. To both the store, and localStorage.
         */
        setPluginSettings(state, action) {
            state.pluginSettings = action.payload;
            localStorage.setItem('headlampPluginSettings', JSON.stringify(action.payload));
        },
        /** Reloads the browser page */
        reloadPage() {
            window.location.reload();
        },
        /**
         * Set the plugin settings component.
         */
        setPluginSettingsComponent(state, action) {
            const { name, component, displaySaveButton } = action.payload;
            state.pluginSettings = state.pluginSettings.map(plugin => {
                if (plugin.name === name) {
                    return {
                        ...plugin,
                        settingsComponent: component,
                        displaySettingsComponentWithSaveButton: displaySaveButton,
                    };
                }
                return plugin;
            });
        },
    },
});
export const { pluginsLoaded, setPluginSettings, setPluginSettingsComponent, reloadPage } = pluginsSlice.actions;
export default pluginsSlice.reducer;
