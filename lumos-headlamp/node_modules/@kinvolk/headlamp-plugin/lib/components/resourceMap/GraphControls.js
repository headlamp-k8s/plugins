import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Icon } from '@iconify/react';
import { Box, Button, ButtonGroup } from '@mui/material';
import { useReactFlow, useStore } from '@xyflow/react';
import { useTranslation } from 'react-i18next';
export function GraphControlButton({ children, onClick, title, disabled, }) {
    const sx = {
        width: '32px',
        height: '32px',
        padding: 0,
        minWidth: '32px',
        borderRadius: '50%',
        '> svg': {
            width: '14px',
            height: '14px',
        },
        fontSize: 'x-small',
    };
    return (_jsx(Button, { disabled: disabled, sx: sx, color: "primary", variant: "contained", title: title, onClick: onClick, children: children }));
}
export function GraphControls({ children }) {
    const { t } = useTranslation();
    const minZoomReached = useStore(it => it.transform[2] <= it.minZoom);
    const maxZoomReached = useStore(it => it.transform[2] >= it.maxZoom);
    const { zoomIn, zoomOut, fitView } = useReactFlow();
    return (_jsxs(Box, { display: "flex", gap: 1, flexDirection: "column", children: [_jsxs(ButtonGroup, { sx: {
                    borderRadius: '40px',
                    '> .MuiButtonGroup-grouped': {
                        minWidth: '32px',
                    },
                }, orientation: "vertical", "aria-label": "Vertical button group", variant: "contained", children: [_jsx(GraphControlButton, { disabled: maxZoomReached, title: t('Zoom in'), onClick: () => zoomIn(), children: _jsx(Icon, { icon: "mdi:plus" }) }), _jsx(GraphControlButton, { disabled: minZoomReached, title: t('Zoom out'), onClick: () => zoomOut(), children: _jsx(Icon, { icon: "mdi:minus" }) })] }), _jsx(GraphControlButton, { title: t('Fit to screen'), onClick: () => fitView(), children: _jsx(Icon, { icon: "mdi:fit-to-screen" }) }), children] }));
}
