import '@xyflow/react/dist/base.css';
import './GraphView.css';
import { GraphFilter } from './graph/graphFiltering';
import { GraphSource } from './graph/graphModel';
import { NodeHighlight } from './NodeHighlight';
interface GraphViewContent {
    setNodeSelection: (nodeId: string) => void;
    nodeSelection?: string;
    highlights: NodeHighlight;
}
export declare const GraphViewContext: import("react").Context<any>;
export declare const useGraphView: () => GraphViewContent;
interface GraphViewContentProps {
    /** Height of the Map */
    height?: string;
    /** ID of a node to select by default */
    defaultNodeSelection?: string;
    /**
     * List of Graph Source to display
     *
     * See {@link GraphSource} for more information
     */
    defaultSources?: GraphSource[];
    /** Default filters to apply */
    defaultFilters?: GraphFilter[];
}
declare function GraphViewContent({ height, defaultNodeSelection, defaultSources, defaultFilters, }: GraphViewContentProps): import("react/jsx-runtime").JSX.Element;
/**
 * Renders Map of Kubernetes resources
 *
 * @param params - Map parameters
 * @returns
 */
export declare function GraphView(props: GraphViewContentProps): import("react/jsx-runtime").JSX.Element;
export {};
