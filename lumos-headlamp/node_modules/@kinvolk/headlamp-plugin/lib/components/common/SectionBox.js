import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import Box from '@mui/material/Box';
import React from 'react';
import BackLink from './BackLink';
import SectionHeader from './SectionHeader';
export function SectionBox(props) {
    const { title, children, headerProps = { noPadding: false, headerStyle: 'subsection' }, outterBoxProps = {}, backLink, ...otherProps } = props;
    let titleElem;
    // If backLink is a boolean, then we want to use the browser's history if true.
    const actualBackLink = typeof backLink === 'boolean' ? (!!backLink ? '' : undefined) : backLink;
    if (typeof title === 'string') {
        titleElem = _jsx(SectionHeader, { title: title, ...headerProps });
    }
    else {
        titleElem = title;
    }
    return (_jsxs(_Fragment, { children: [actualBackLink !== undefined && _jsx(BackLink, { to: actualBackLink }), _jsxs(Box, { py: 0, ...outterBoxProps, children: [title && titleElem, _jsx(Box, { sx: theme => ({
                            paddingTop: 0,
                            paddingBottom: 0,
                            paddingLeft: theme.spacing(2),
                            paddingRight: theme.spacing(2),
                            [theme.breakpoints.down('sm')]: {
                                paddingLeft: 0,
                                paddingRight: 0,
                            },
                        }), ...otherProps, children: React.Children.toArray(children) })] })] }));
}
export default SectionBox;
