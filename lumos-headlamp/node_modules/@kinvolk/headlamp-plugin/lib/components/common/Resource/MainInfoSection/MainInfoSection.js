import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import Paper from '@mui/material/Paper';
import React from 'react';
import { useTranslation } from 'react-i18next';
import { createRouteURL } from '../../../../lib/router';
import Loader from '../../../common/Loader';
import Empty from '../../EmptyContent';
import SectionBox from '../../SectionBox';
import { MetadataDisplay } from '../MetadataDisplay';
import { MainInfoHeader } from './MainInfoSectionHeader';
export function MainInfoSection(props) {
    const { resource, headerSection, title, extraInfo = [], actions = [], headerStyle = 'main', noDefaultActions = false, backLink, error = null, } = props;
    const { t } = useTranslation();
    const header = typeof headerSection === 'function' ? headerSection(resource) : headerSection;
    function getBackLink() {
        if (backLink === null) {
            return false;
        }
        if (!!backLink || backLink === '') {
            return backLink;
        }
        if (!!resource) {
            return createRouteURL(resource.listRoute);
        }
    }
    return (_jsx(SectionBox, { "aria-busy": resource === null, "aria-live": "polite", title: _jsx(MainInfoHeader, { title: title, resource: resource, headerStyle: headerStyle, noDefaultActions: noDefaultActions, actions: actions }), backLink: getBackLink(), children: resource === null ? (!!error ? (_jsx(Paper, { variant: "outlined", children: _jsx(Empty, { color: "error", children: error.toString() }) })) : (_jsx(Loader, { title: t('translation|Loading resource data') }))) : (_jsxs(React.Fragment, { children: [header, _jsx(MetadataDisplay, { resource: resource, extraRows: extraInfo })] })) }));
}
