import { jsx as _jsx } from "react/jsx-runtime";
import { Icon } from '@iconify/react';
import Button from '@mui/material/Button';
import Typography from '@mui/material/Typography';
import React from 'react';
import { useTranslation } from 'react-i18next';
import { useHistory } from 'react-router-dom';
export default function BackLink(props) {
    const { to: backLink = '' } = props;
    const { t } = useTranslation();
    const history = useHistory();
    // We only want to update when the backLink changes (not the history).
    React.useEffect(() => { }, [backLink]);
    return (_jsx(Button, { startIcon: _jsx(Icon, { icon: "mdi:chevron-left" }), size: "small", sx: theme => ({ color: theme.palette.primaryColor }), onClick: () => {
            // If there is no back link, go back in history.
            if (!backLink) {
                history.goBack();
                return;
            }
            history.push(backLink);
        }, children: _jsx(Typography, { style: { paddingTop: '3px' }, children: t('translation|Back') }) }));
}
