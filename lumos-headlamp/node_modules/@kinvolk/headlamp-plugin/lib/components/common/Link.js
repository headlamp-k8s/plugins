import { jsx as _jsx } from "react/jsx-runtime";
import MuiLink from '@mui/material/Link';
import { Link as RouterLink } from 'react-router-dom';
import { createRouteURL } from '../../lib/router';
import { LightTooltip } from './Tooltip';
function PureLink(props) {
    if (props.kubeObject) {
        const { kubeObject, ...otherProps } = props;
        return (_jsx(MuiLink, { component: RouterLink, to: kubeObject.getDetailsLink(), ...otherProps, children: props.children || kubeObject.getName() }));
    }
    const { routeName, params = {}, search, state, ...otherProps } = props;
    return (_jsx(MuiLink, { component: RouterLink, to: {
            pathname: createRouteURL(routeName, params),
            search,
            state,
        }, ...otherProps, children: props.children }));
}
export default function Link(props) {
    const { tooltip, ...otherProps } = props;
    if (tooltip) {
        let tooltipText = '';
        if (typeof tooltip === 'string') {
            tooltipText = tooltip;
        }
        else if (props.kubeObject) {
            tooltipText = props.getName();
        }
        else if (typeof props.children === 'string') {
            tooltipText = props.children;
        }
        if (!!tooltipText) {
            return (_jsx(LightTooltip, { title: tooltipText, interactive: true, children: _jsx("span", { children: _jsx(PureLink, { ...otherProps }) }) }));
        }
    }
    return _jsx(PureLink, { ...otherProps });
}
