import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { Box, Typography } from '@mui/material';
import { useTranslation } from 'react-i18next';
import { useParams } from 'react-router';
import { LimitRange } from '../../lib/k8s/limitRange';
import { DetailsGrid, MetadataDictGrid } from '../common';
export function LimitRangeDetails(props) {
    const params = useParams();
    const { name = params.name, namespace = params.namespace } = props;
    const { t } = useTranslation(['translation']);
    return (_jsx(DetailsGrid, { resourceType: LimitRange, name: name, namespace: namespace, withEvents: true, extraInfo: item => item && [
            {
                name: t('translation|Container Limits'),
                value: (_jsxs(_Fragment, { children: [_jsxs(Box, { m: 1, children: [_jsx(Typography, { variant: "h6", children: t('translation|Default') }), _jsx(MetadataDictGrid, { dict: item?.jsonData?.spec?.limits?.[0]?.default })] }), _jsxs(Box, { m: 1, children: [_jsx(Typography, { variant: "h6", children: t('translation|Default Request') }), _jsx(MetadataDictGrid, { dict: item?.jsonData?.spec?.limits?.[0]?.defaultRequest })] }), _jsxs(Box, { m: 1, children: [_jsx(Typography, { variant: "h6", children: t('translation|Max') }), _jsx(MetadataDictGrid, { dict: item?.jsonData?.spec?.limits?.[0]?.max })] }), _jsxs(Box, { m: 1, children: [_jsx(Typography, { variant: "h6", children: t('translation|Min') }), _jsx(MetadataDictGrid, { dict: item?.jsonData?.spec?.limits?.[0]?.min })] })] })),
            },
        ] }));
}
