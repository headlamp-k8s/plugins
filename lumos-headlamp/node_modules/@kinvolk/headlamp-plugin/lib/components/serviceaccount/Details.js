import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import React from 'react';
import { useTranslation } from 'react-i18next';
import { useParams } from 'react-router-dom';
import ServiceAccount from '../../lib/k8s/serviceAccount';
import { Link } from '../common';
import { DetailsGrid } from '../common/Resource';
export default function ServiceAccountDetails(props) {
    const params = useParams();
    const { name = params.name, namespace = params.namespace } = props;
    const { t } = useTranslation('glossary');
    return (_jsx(DetailsGrid, { resourceType: ServiceAccount, name: name, namespace: namespace, withEvents: true, extraInfo: item => item && [
            {
                name: t('Secrets'),
                value: (_jsx(React.Fragment, { children: item.secrets?.map(({ name }, index) => (_jsxs(React.Fragment, { children: [_jsx(Link, { routeName: 'secret', params: { namespace, name }, children: name }), index !== item.secrets.length - 1 && ','] }, `${name}__${index}`))) })),
            },
        ] }));
}
