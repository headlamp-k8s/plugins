import { jsx as _jsx } from "react/jsx-runtime";
import { useTranslation } from 'react-i18next';
import { useParams } from 'react-router-dom';
import Secret from '../../lib/k8s/secret';
import { EmptyContent } from '../common';
import { DetailsGrid, SecretField } from '../common/Resource';
import { SectionBox } from '../common/SectionBox';
import { NameValueTable } from '../common/SimpleTable';
export default function SecretDetails(props) {
    const params = useParams();
    const { name = params.name, namespace = params.namespace } = props;
    const { t } = useTranslation();
    return (_jsx(DetailsGrid, { resourceType: Secret, name: name, namespace: namespace, withEvents: true, extraInfo: item => item && [
            {
                name: t('translation|Type'),
                value: item.type,
            },
        ], extraSections: item => item && [
            {
                id: 'headlamp.secrets-data',
                section: () => {
                    const itemData = item?.data || {};
                    const mainRows = Object.entries(itemData).map((item) => ({
                        name: item[0],
                        value: _jsx(SecretField, { value: item[1] }),
                    }));
                    return (_jsx(SectionBox, { title: t('translation|Data'), children: mainRows.length === 0 ? (_jsx(EmptyContent, { children: t('No data in this secret') })) : (_jsx(NameValueTable, { rows: mainRows })) }));
                },
            },
        ] }));
}
