import { jsx as _jsx } from "react/jsx-runtime";
import { useTranslation } from 'react-i18next';
import { useParams } from 'react-router-dom';
import { LimitRange } from '../../lib/k8s/limitRange';
import Namespace from '../../lib/k8s/namespace';
import ResourceQuota from '../../lib/k8s/resourceQuota';
import { StatusLabel } from '../common/Label';
import { ConditionsSection, DetailsGrid, OwnedPodsSection } from '../common/Resource';
import DetailsViewSection from '../DetailsViewSection';
import { LimitRangeRenderer } from '../limitRange/List';
import { ResourceQuotaRenderer } from '../resourceQuota/List';
export default function NamespaceDetails(props) {
    const params = useParams();
    const { name = params.name } = props;
    const { t } = useTranslation(['glossary', 'translation']);
    function makeStatusLabel(namespace) {
        const status = namespace?.status.phase;
        return _jsx(StatusLabel, { status: status === 'Active' ? 'success' : 'error', children: status });
    }
    return (_jsx(DetailsGrid, { resourceType: Namespace, name: name, withEvents: true, extraInfo: item => item && [
            {
                name: t('translation|Status'),
                value: makeStatusLabel(item),
            },
        ], extraSections: item => item && [
            {
                id: 'headlamp.namespace-conditions',
                section: item?.status?.conditions && _jsx(ConditionsSection, { resource: item }),
            },
            {
                id: 'headlamp.namespace-owned-resourcequotas',
                section: _jsx(NamespacedResourceQuotasSection, { resource: item?.jsonData }),
            },
            {
                id: 'headlamp.namespace-owned-limitranges',
                section: _jsx(NamespacedLimitRangesSection, { resource: item?.jsonData }),
            },
            {
                id: 'headlamp.namespace-owned-pods',
                section: (_jsx(OwnedPodsSection, { hideColumns: ['namespace'], resource: item?.jsonData, noSearch: true })),
            },
            {
                id: 'headlamp.namespace-details-view',
                section: _jsx(DetailsViewSection, { resource: item }),
            },
        ] }));
}
export function NamespacedLimitRangesSection(props) {
    const { resource } = props;
    const [limitRanges, error] = LimitRange.useList({
        namespace: resource.metadata.name,
    });
    return (_jsx(LimitRangeRenderer, { hideColumns: ['namespace'], limitRanges: limitRanges, error: error, noNamespaceFilter: true }));
}
export function NamespacedResourceQuotasSection(props) {
    const { resource } = props;
    const [resourceQuotas, error] = ResourceQuota.useList({
        namespace: resource.metadata.name,
    });
    return (_jsx(ResourceQuotaRenderer, { hideColumns: ['namespace'], resourceQuotas: resourceQuotas, error: error, noNamespaceFilter: true }));
}
