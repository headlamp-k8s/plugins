import { jsxs as _jsxs, jsx as _jsx } from "react/jsx-runtime";
import Button from '@mui/material/Button';
import { styled } from '@mui/system';
import React from 'react';
import { Trans, useTranslation } from 'react-i18next';
const SpanClusterName = styled('span')({
    textOverflow: 'ellipsis',
    whiteSpace: 'nowrap',
    overflow: 'hidden',
    display: 'block',
});
const ClusterChooser = React.forwardRef(function ClusterChooser({ clickHandler, cluster }, ref) {
    const { t } = useTranslation();
    return (_jsx(Button, { size: "large", variant: "contained", onClick: clickHandler, sx: theme => ({
            color: theme.palette.clusterChooser.button.color,
            background: theme.palette.clusterChooser.button.background,
            '&:hover': {
                background: theme.palette.clusterChooser.button.hover.background,
            },
            maxWidth: '20em',
            textTransform: 'none',
            padding: '6px 22px',
        }), ref: ref, children: _jsx(SpanClusterName, { title: cluster, children: _jsxs(Trans, { t: t, children: ["Cluster: ", { cluster }] }) }) }));
});
export default ClusterChooser;
