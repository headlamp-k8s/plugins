import { jsxs as _jsxs, jsx as _jsx, Fragment as _Fragment } from "react/jsx-runtime";
import Typography from '@mui/material/Typography';
import { useTranslation } from 'react-i18next';
import { getPercentStr, getResourceMetrics, getResourceStr } from '../../lib/util';
import { TooltipIcon } from '../common';
import { PercentageBar } from '../common/Chart';
export function UsageBarChart(props) {
    const { node, nodeMetrics, resourceType, noMetrics = false } = props;
    const { t } = useTranslation(['translation']);
    let [used, capacity] = [0, 0];
    if (node) {
        [used, capacity] = getResourceMetrics(node, nodeMetrics || [], resourceType);
    }
    const data = [
        {
            name: t('used'),
            value: used,
        },
    ];
    function tooltipFunc() {
        return (_jsxs(Typography, { children: [getResourceStr(used, resourceType), " of ", getResourceStr(capacity, resourceType), " (", getPercentStr(used, capacity), ")"] }));
    }
    return noMetrics ? (_jsxs(_Fragment, { children: [_jsx(Typography, { display: "inline", children: getResourceStr(capacity, resourceType) }), _jsx(TooltipIcon, { children: t('translation|Install the metrics-server to get usage data.') })] })) : (_jsx(PercentageBar, { data: data, total: capacity, tooltipFunc: tooltipFunc }));
}
