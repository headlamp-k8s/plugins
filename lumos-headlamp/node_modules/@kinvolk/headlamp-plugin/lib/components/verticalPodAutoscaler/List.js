import { jsx as _jsx, jsxs as _jsxs, Fragment as _Fragment } from "react/jsx-runtime";
import { Link, Paper, Typography } from '@mui/material';
import { useEffect, useState } from 'react';
import { Trans, useTranslation } from 'react-i18next';
import VPA from '../../lib/k8s/vpa';
import { SectionBox } from '../common';
import Empty from '../common/EmptyContent';
import ResourceListView from '../common/Resource/ResourceListView';
export default function VpaList() {
    const { t } = useTranslation(['glossary', 'translation']);
    const [vpaEnabled, setVpaEnabled] = useState(null);
    useEffect(() => {
        const vpaStatus = async () => {
            const enabled = await VPA.isEnabled();
            setVpaEnabled(enabled);
        };
        vpaStatus();
    }, []);
    return (_jsx(_Fragment, { children: vpaEnabled === null ? (_jsx(SectionBox, { title: t('glossary|Vertical Pod Autoscalers'), children: _jsx(Paper, { variant: "outlined", children: _jsx(Empty, { children: _jsx(Typography, { style: { textAlign: 'center' }, children: t('glossary|Checking if Vertical Pod Autoscaler is enabledâ€¦') }) }) }) })) : vpaEnabled ? (_jsx(ResourceListView, { title: t('glossary|Vertical Pod Autoscalers'), resourceClass: VPA, columns: [
                'name',
                'namespace',
                'cluster',
                {
                    id: 'cpu',
                    label: t('glossary|CPU'),
                    getValue: item => item?.targetRecommendations?.cpu ?? null,
                },
                {
                    id: 'memory',
                    label: t('glossary|Memory'),
                    getValue: item => item?.targetRecommendations?.memory ?? null,
                },
                {
                    id: 'provided',
                    label: t('translation|Provided'),
                    getValue: item => item?.status?.conditions?.[0]?.status ?? null,
                },
                'age',
            ] })) : (_jsx(SectionBox, { title: t('glossary|Vertical Pod Autoscalers'), children: _jsx(Paper, { variant: "outlined", children: _jsx(Empty, { children: _jsx(Typography, { style: { textAlign: 'center' }, children: _jsxs(Trans, { t: t, children: ["Vertical Pod Autoscaler is not enabled.\u00A0", _jsx(Link, { href: "https://github.com/kubernetes/autoscaler/tree/master/vertical-pod-autoscaler#installation", target: "_blank", rel: "noopener", children: "Learn More" })] }) }) }) }) })) }));
}
