import _ from 'lodash';
import { UI_FUNCTIONS_OVERRIDE, UI_HIDE_APP_BAR, UI_INITIALIZE_PLUGIN_VIEWS, UI_SET_CLUSTER_CHOOSER_BUTTON, UI_SET_IS_FULLWIDTH, UI_VERSION_DIALOG_OPEN, } from '../actions/actions';
export const INITIAL_STATE = {
    isVersionDialogOpen: false,
    hideAppBar: false,
    isFullWidth: false,
    functionsToOverride: {},
};
function reducer(state = _.cloneDeep(INITIAL_STATE), action) {
    const newFilters = { ..._.cloneDeep(state) };
    switch (action.type) {
        case UI_HIDE_APP_BAR: {
            newFilters.hideAppBar = action.hideAppBar;
            break;
        }
        case UI_INITIALIZE_PLUGIN_VIEWS: {
            const newState = _.cloneDeep(INITIAL_STATE);
            return newState;
        }
        case UI_SET_CLUSTER_CHOOSER_BUTTON: {
            const component = action.component;
            newFilters.clusterChooserButtonComponent = component;
            break;
        }
        case UI_VERSION_DIALOG_OPEN: {
            newFilters.isVersionDialogOpen = action.isVersionDialogOpen;
            break;
        }
        case UI_FUNCTIONS_OVERRIDE: {
            const functionToOverride = action.override;
            for (const key in functionToOverride) {
                if (functionToOverride.hasOwnProperty(key)) {
                    newFilters.functionsToOverride[key] = functionToOverride[key];
                }
            }
            break;
        }
        case UI_SET_IS_FULLWIDTH: {
            newFilters.isFullWidth = action.isFullWidth;
            break;
        }
        default:
            return state;
    }
    return newFilters;
}
export default reducer;
