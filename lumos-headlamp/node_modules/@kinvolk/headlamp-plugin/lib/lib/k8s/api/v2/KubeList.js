export const KubeList = {
    /**
     * Apply an update event to the existing list
     *
     * @param list - List of kubernetes resources
     * @param update - Update event to apply to the list
     * @param itemClass - Class of an item in the list. Used to instantiate each item
     * @returns New list with the updated values
     */
    applyUpdate(list, update, itemClass) {
        const newItems = [...list.items];
        const index = newItems.findIndex(item => item.metadata.uid === update.object.metadata.uid);
        switch (update.type) {
            case 'ADDED':
            case 'MODIFIED':
                if (index !== -1) {
                    newItems[index] = new itemClass(update.object);
                }
                else {
                    newItems.push(new itemClass(update.object));
                }
                break;
            case 'DELETED':
                if (index !== -1) {
                    newItems.splice(index, 1);
                }
                break;
            case 'ERROR':
                console.error('Error in update', update);
                break;
            default:
                console.error('Unknown update type', update);
        }
        return {
            ...list,
            metadata: {
                resourceVersion: update.object.metadata.resourceVersion,
            },
            items: newItems,
        };
    },
};
