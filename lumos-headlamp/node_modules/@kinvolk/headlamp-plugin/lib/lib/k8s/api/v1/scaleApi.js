import { getCluster } from '../../../cluster';
import { clusterRequest, patch, put } from './clusterRequests';
export function apiScaleFactory(apiRoot, resource) {
    return {
        get: (namespace, name, clusterName) => {
            const cluster = clusterName || getCluster() || '';
            return clusterRequest(url(namespace, name), { cluster });
        },
        put: (body, clusterName) => {
            const cluster = clusterName || getCluster() || '';
            return put(url(body.metadata.namespace, body.metadata.name), body, undefined, { cluster });
        },
        patch: (body, metadata, clusterName) => {
            const cluster = clusterName || getCluster() || '';
            return patch(url(metadata.namespace, metadata.name), body, false, { cluster });
        },
    };
    function url(namespace, name) {
        return `${apiRoot}/namespaces/${namespace}/${resource}/${name}/scale`;
    }
}
