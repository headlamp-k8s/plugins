import { KubeContainer, LabelSelector } from './cluster';
import { KubeMetadata } from './KubeMetadata';
import { KubeObject, KubeObjectInterface } from './KubeObject';
import { KubePodSpec } from './pod';
export interface KubeStatefulSet extends KubeObjectInterface {
    spec: {
        selector: LabelSelector;
        updateStrategy: {
            rollingUpdate: {
                partition: number;
            };
            type: string;
        };
        template: {
            metadata: KubeMetadata;
            spec: KubePodSpec;
        };
        [other: string]: any;
    };
    status: {
        [otherProps: string]: any;
    };
}
declare class StatefulSet extends KubeObject<KubeStatefulSet> {
    static kind: string;
    static apiName: string;
    static apiVersion: string;
    static isNamespaced: boolean;
    get spec(): {
        [other: string]: any;
        selector: LabelSelector;
        updateStrategy: {
            rollingUpdate: {
                partition: number;
            };
            type: string;
        };
        template: {
            metadata: KubeMetadata;
            spec: KubePodSpec;
        };
    };
    get status(): {
        [otherProps: string]: any;
    };
    getContainers(): KubeContainer[];
}
export default StatefulSet;
