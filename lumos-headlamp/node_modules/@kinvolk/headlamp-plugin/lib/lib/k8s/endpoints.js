import { KubeObject } from './KubeObject';
class Endpoints extends KubeObject {
    // @todo Remove this when we can break backward compatibility.
    static get detailsRoute() {
        return 'Endpoint';
    }
    // @todo Remove this when we can break backward compatibility.
    static get className() {
        return 'Endpoint';
    }
    get spec() {
        return this.jsonData.spec;
    }
    get status() {
        return this.jsonData.status;
    }
    get subsets() {
        return this.jsonData.subsets;
    }
    getAddressesText() {
        return this.getAddresses().join(', ');
    }
    getAddresses() {
        const addresses = [];
        this.subsets?.forEach((subset) => {
            subset.ports?.forEach(port => {
                subset.addresses?.forEach(address => {
                    addresses.push(address.ip + ':' + port.port);
                });
            });
        });
        return addresses;
    }
}
Endpoints.kind = 'Endpoints';
Endpoints.apiName = 'endpoints';
Endpoints.apiVersion = 'v1';
Endpoints.isNamespaced = true;
export default Endpoints;
