import { normalizeUnit } from '../util';
import { KubeObject } from './KubeObject';
class ResourceQuota extends KubeObject {
    get spec() {
        return this.jsonData.spec;
    }
    get status() {
        return this.jsonData.status;
    }
    get requests() {
        const req = [];
        this.spec.hard &&
            Object.keys(this.spec.hard).forEach(key => {
                if (key === 'cpu' || key === 'memory' || key.startsWith('requests.')) {
                    req.push(`${key}: ${normalizeUnit(key, this.status.used[key])}/${normalizeUnit(key, this.spec.hard[key])}`);
                }
            });
        return req;
    }
    get limits() {
        const limits = [];
        this.spec.hard &&
            Object.keys(this.spec.hard).forEach(key => {
                if (key.startsWith('limits.')) {
                    limits.push(`${key}: ${normalizeUnit(key, this.status.used[key])}/${normalizeUnit(key, this.spec.hard[key])}`);
                }
            });
        return limits;
    }
    get resourceStats() {
        const stats = [];
        this.status.hard &&
            Object.keys(this.status.hard).forEach(key => {
                stats.push({
                    name: key,
                    hard: `${this.status.hard[key]}`,
                    used: `${this.status.used[key]}`,
                });
            });
        return stats;
    }
}
ResourceQuota.kind = 'ResourceQuota';
ResourceQuota.apiName = 'resourcequotas';
ResourceQuota.apiVersion = 'v1';
ResourceQuota.isNamespaced = true;
export default ResourceQuota;
