import { KubeContainer, LabelSelector } from './cluster';
import { KubeMetadata } from './KubeMetadata';
import { KubeObject, KubeObjectInterface } from './KubeObject';
import { KubePodSpec } from './pod';
export interface KubeDeployment extends KubeObjectInterface {
    spec: {
        selector?: LabelSelector;
        strategy?: {
            type: string;
            [otherProps: string]: any;
        };
        template: {
            metadata?: KubeMetadata;
            spec: KubePodSpec;
        };
        [otherProps: string]: any;
    };
    status: {
        [otherProps: string]: any;
    };
}
declare class Deployment extends KubeObject<KubeDeployment> {
    static kind: string;
    static apiName: string;
    static apiVersion: string;
    static isNamespaced: boolean;
    get spec(): any;
    get status(): any;
    getContainers(): KubeContainer[];
    getMatchLabelsList(): string[];
}
export default Deployment;
